---
- name: Build a debian cloud image suitable for Zuul
  hosts: localhost
  vars:
    image_url: https://cdimage.debian.org/cdimage/openstack/current/debian-10.0.2-20190721-openstack-amd64.qcow2
    image_checksum: "sha256:d4c2966d996a3e08c198be41640d54b5d0c038cfc21b4d05e4b769824974daaf"
    image_cache_file: "/srv/nodepool/cache/debian-10-openstack-amd64.qcow2"
    image_cache_dir: "/srv/nodepool/cache"
    image_tmp_dir: "/srv/nodepool/tmp/{{ image_output | basename }}"
    extra_packages:
      - openssh-server
      - yarnpkg
      - rsync
      - iproute2
      - git
      - python-pip
      - python3-pip
      - traceroute
      - libpq-dev
      - python2.7
      - libpython2.7-dev
      - python-pkg-resources
      - python3.7
      - libpython3.7-dev
      - python3-pkg-resources
      - python-virtualenv
      - python3-virtualenv
      - yamllint
      - flake8
      - ansible-lint
      - golint
      - libldap2-dev
      - libsasl2-dev
      - libssl-dev
  tasks:
    - name: Ensure libvirt is started
      service:
        name: libvirtd
        state: started

    - name: Check if image is already downloaded
      stat:
        path: "{{ image_cache_file }}"
      register: _image_cache_file_stat

    - name: Download if checksum doesn't match
      get_url:
        url: "{{ image_url }}"
        dest: "{{ image_cache_file }}"
        checksum: "{{ image_checksum }}"
      when: not _image_cache_file_stat.stat.exists

    - name: Customize the image for zuul ci
      block:
        - name: Create tmp directory
          file:
            path: "{{ image_tmp_dir }}"
            state: directory
            mode: 0755

        - name: Set filename copy fact
          set_fact:
            image_file: "{{ image_tmp_dir }}/{{ image_cache_file | basename }}"

        - name: Copy the image
          copy:
            src: "{{ image_cache_file }}"
            dest: "{{ image_file }}"
            remote_src: true
            mode: 0644

        - name: Prepare the sudoers file
          copy:
            content: |
              Defaults    !requiretty
              zuul-worker ALL=(ALL) NOPASSWD:ALL
              zuul ALL=(ALL) NOPASSWD:ALL
            dest: "{{ image_tmp_dir }}/zuul"

        - name: Prepare the authorized_keys file
          copy:
            src: /var/lib/nodepool/.ssh/zuul_rsa.pub
            dest: "{{ image_tmp_dir }}/authorized_keys"
            remote_src: true

        - name: Prepare sshd_config file
          copy:
            content: |
              HostKey /etc/ssh/ssh_host_rsa_key
              HostKey /etc/ssh/ssh_host_ecdsa_key
              HostKey /etc/ssh/ssh_host_ed25519_key
              KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256
              Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
              MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
              SyslogFacility AUTHPRIV
              AuthorizedKeysFile .ssh/authorized_keys
              PasswordAuthentication no
              ChallengeResponseAuthentication no
              GSSAPIAuthentication no
              GSSAPICleanupCredentials no
              UsePAM yes
              X11Forwarding no
              UseDNS no
              AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
              AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
              AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
              AcceptEnv XMODIFIERS
              Subsystem sftp  /usr/libexec/openssh/sftp-server
            dest: "{{ image_tmp_dir }}/sshd_config"

        - name: Setup docker
          copy:
            content: |
              deb [arch=amd64] http://download.docker.com/linux/debian buster stable
            dest: "{{ image_tmp_dir }}/docker.list"

        - name: Download docker gpg key
          get_url:
             url: https://download.docker.com/linux/debian/gpg
             dest: "{{ image_tmp_dir }}/docker.gpg"

        - name: Install APT https transport
          command: >-
            virt-customize -m 1024 -a {{ image_file }}
            {# Update APT Cache #}
            --update
            --install apt-transport-https,ca-certificates,gnupg2,curl

        - name: Configure APT
          command: >-
            virt-customize -m 1024 -a {{ image_file }}
            {# Setup docker #}
            --copy-in '{{ image_tmp_dir }}/docker.list:/etc/apt/sources.list.d/'
            --copy-in '{{ image_tmp_dir }}/docker.gpg:/tmp/'
            --run-command 'apt-key add /tmp/docker.gpg'

        - name: APT Update
          command: >-
            virt-customize -m 1024 -a {{ image_file }}
            {# Update APT Cache #}
            --update

        - name: Customize the image
          command: >-
            virt-customize -m 1024 -a {{ image_file }}
            {# Install extra packages #}
            --install '{{ extra_packages | join(',') }}'
            --run-command 'pip install tox'
            {# Ensure zuul-worker user exists #}
            --run-command 'useradd -m zuul-worker -G docker -s /bin/bash'
            --run-command 'sed -i "s/zuul-worker:\!:/zuul-worker:*:/" /etc/shadow'
            {# Setup authorized_keys #}
            --mkdir '/home/zuul-worker/.ssh'
            --chmod '0700:/home/zuul-worker/.ssh'
            --copy-in '{{ image_tmp_dir }}/authorized_keys:/home/zuul-worker/.ssh/'
            --chmod '0600:/home/zuul-worker/.ssh/authorized_keys'
            {# Ensure user private bin path #}
            --append-line '/home/zuul-worker/.profile:PATH="/home/zuul-worker/.local/bin:$PATH"'
            --mkdir '/home/zuul-worker/.local/bin'
            {# Setup sudoers file #}
            --copy-in '{{ image_tmp_dir }}/zuul:/etc/sudoers.d/'
            --chmod '0440:/etc/sudoers.d/zuul'
            {# Setup sshd_config file #}
            --copy-in '{{ image_tmp_dir }}/sshd_config:/etc/ssh/'
            --chmod '0600:/etc/ssh/sshd_config'
            {# Disable IPv6 because rdo-cloud does not route v6 #}
            --append-line '/etc/sysctl.conf:net.ipv6.conf.all.disable_ipv6 = 1'
            --append-line '/etc/sysctl.conf:net.ipv6.conf.default.disable_ipv6 = 1'
            {# Ensure zuul-worker files are owned by zuul-worker #}
            --run-command 'chown -R zuul-worker:zuul-worker /home/zuul-worker'

        - name: Create raw file
          command: "qemu-img convert -O raw {{ image_file }} {{ image_output }}.raw"
          when: raw_type | default(False) | bool

        - name: Create qcow file
          command: "mv {{ image_file }} {{ image_output }}.qcow2"
          when: qcow2_type | default(False) | bool

      always:
        - name: Remove tmp directory
          file:
            path: "{{ image_tmp_dir }}"
            state: absent
